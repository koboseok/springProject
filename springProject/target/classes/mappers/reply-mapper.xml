<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="replyMapper">

	<!-- resultMap : 조회된 result set의 컬럼명과 VO의 필드명이 같지 않을 때 매핑 시키는 역할 -->
	<resultMap type="Reply" id="reply_rm">
		<!-- DB의 기본 키 -->
		<id property="replyNo" column="REPLY_NO" />

		<!-- DB의 일반 컬럼들 -->
		<result property="replyContent" column="REPLY_CONTENT" />
		<result property="replyCreateDate" column="REPLY_CREATE_DT" />
		<result property="replyModifyDate" column="REPLY_MODIFY_DT" />
		<result property="replyStatus" column="REPLY_STATUS" />
		<result property="memberId" column="MEMBER_ID" />
		<result property="parentBoardNo" column="PARENT_BOARD_NO" />
		<result property="parentReplyNo" column="PARENT_REPLY_NO" />
		<result property="replyDepth" column="REPLY_DEPTH" />
	</resultMap>
   
	<!-- parameterType : 전달 받아오는 자료형 -->
	<!-- resultType : 반환받은 결과를 저장할때의 자료형 (단일행,단일열) 컬럼명과 필드명이 같을 경우  -->
	<!-- resultMap : 다중 -->
	<!-- 조건절 : #  값으로 인식시킬꺼면-->
	<!-- 컬럼명 조합 시 $ SQL문 자체로 인식시킬꺼면  -->
	
	<!-- 댓글 목록 조회 -->
	<select id="selectReplyList" parameterType="_int" resultMap="reply_rm">
		
		SELECT * FROM V_REPLY
		WHERE REPLY_STATUS = 'Y' 
		AND PARENT_BOARD_NO = #{parentBoardNo} 
		AND PARENT_REPLY_NO IN(SELECT REPLY_NO FROM V_REPLY
                        WHERE REPLY_STATUS = 'Y'
                        AND REPLY_DEPTH = 0
                        AND PARENT_BOARD_NO = #{parentBoardNo})
		ORDER BY PARENT_REPLY_NO DESC,
        CASE WHEN PARENT_REPLY_NO = REPLY_NO THEN 99999999
        ELSE REPLY_NO END DESC
		
	</select>
	
	<!-- 댓글 삽입  -->
	<insert id="insertReply" parameterType="map">
		INSERT INTO REPLY(REPLY_NO, REPLY_CONTENT, PARENT_BOARD_NO, PARENT_REPLY_NO, REPLY_WRITER)
		VALUES(SEQ_RNO.NEXTVAL, #{replyContent}, #{parentBoardNo}, SEQ_RNO.CURRVAL, #{replyWriter} )
	</insert> 
	

	<!-- 댓글 수정 -->
	<update id="updateReply" parameterType="Reply">
		UPDATE REPLY SET
		REPLY_CONTENT = #{replyContent},
		REPLY_MODIFY_DT = SYSDATE
		
		WHERE REPLY_NO = #{replyNo}
		
	
	</update>
	
	<!-- 댓글 삭제 -->
	<delete id="deleteReply" parameterType="_int">
		UPDATE REPLY SET 
		REPLY_STATUS = 'N'
		
		WHERE REPLY_NO = #{replyNo}
	
	</delete>
	
	<!-- 대댓글 삽입 -->
	<insert id="insertChildReply" parameterType="map">
		INSERT INTO REPLY(REPLY_NO, REPLY_CONTENT, PARENT_BOARD_NO, PARENT_REPLY_NO, REPLY_WRITER, REPLY_DEPTH)
		VALUES(SEQ_RNO.NEXTVAL, #{replyContent}, #{parentBoardNo}, #{parentReplyNo}, #{replyWriter}, 1)
	
	</insert>
	
	



</mapper>